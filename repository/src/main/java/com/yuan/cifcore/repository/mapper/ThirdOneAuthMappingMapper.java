/*
 * Bench Inc.
 * Copyright (c) 2004 All Rights Reserved.
 */
package com.yuan.cifcore.repository.mapper;



// auto generated imports
//dao imports
import java.util.Map;
import java.util.HashMap;
import java.util.List;
import java.util.ArrayList;
import com.yuan.cifcore.repository.entity.ThirdOneAuthMappingDO;
import org.springframework.dao.DataAccessException;
import org.apache.ibatis.annotations.Param;
import com.baomidou.mybatisplus.core.mapper.BaseMapper;
//do imports
import java.util.Date;

/**
 * A dao interface provides methods to access database table <tt>cif_third_one_auth_mapping</tt>.
 *
 * This file is generated by <tt>bench-gen-dal</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>bench</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/cif_third_one_auth_mapping.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>bench-gen-dal</tt> 
 * to generate this file.
 *
 * @author cold
 */
public interface ThirdOneAuthMappingMapper  extends BaseMapper<ThirdOneAuthMappingDO>{
	/**
	 *  Query DB table <tt>cif_third_one_auth_mapping</tt> for records.
	 *
	 *  <p>
	 *   
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, third_one_auth_id, third_channel, third_one_auth_name, properties, unique_id, gmt_create, gmt_modified, one_auth_id, domain from CIF_THIRD_ONE_AUTH_MAPPING where (one_auth_id = ?)</tt>
	 *
	 *	@param oneAuthId 
	 *	@return List<ThirdOneAuthMappingDO>
	 *	@throws DataAccessException
	 */	 

		public List<ThirdOneAuthMappingDO> selectByOneAuthId(@Param("oneAuthId")String oneAuthId) throws DataAccessException;

	/**
	 *  Query DB table <tt>cif_third_one_auth_mapping</tt> for records.
	 *
	 *  <p>
	 *   
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, third_one_auth_id, third_channel, third_one_auth_name, properties, unique_id, gmt_create, gmt_modified, one_auth_id, domain from CIF_THIRD_ONE_AUTH_MAPPING where ((third_channel = ?) AND (one_auth_id = ?))</tt>
	 *
	 *	@param thirdChannel 
	 *	@param oneAuthId 
	 *	@return List<ThirdOneAuthMappingDO>
	 *	@throws DataAccessException
	 */	 

		public List<ThirdOneAuthMappingDO> selectByThirdChannelAndOneAuthId(@Param("thirdChannel")String thirdChannel , @Param("oneAuthId")String oneAuthId) throws DataAccessException;

	/**
	 *  Query DB table <tt>cif_third_one_auth_mapping</tt> for records.
	 *
	 *  <p>
	 *   
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, third_one_auth_id, third_channel, third_one_auth_name, properties, unique_id, gmt_create, gmt_modified, one_auth_id, domain from CIF_THIRD_ONE_AUTH_MAPPING where (1 = 0)</tt>
	 *
	 *	@param thirdChannels 
	 *	@param oneAuthId 
	 *	@return List<ThirdOneAuthMappingDO>
	 *	@throws DataAccessException
	 */	 

		public List<ThirdOneAuthMappingDO> selectByThirdChannelsAndOneAuthId(@Param("thirdChannels")List<?> thirdChannels , @Param("oneAuthId")String oneAuthId) throws DataAccessException;

	/**
	 *  Query DB table <tt>cif_third_one_auth_mapping</tt> for records.
	 *
	 *  <p>
	 *   
	 *  The sql statement for this operation is <br>
	 *  <tt>select third_one_auth_id from CIF_THIRD_ONE_AUTH_MAPPING where ((third_channel = ?) AND (one_auth_id = ?))</tt>
	 *
	 *	@param thirdChannel 
	 *	@param oneAuthId 
	 *	@return List<String>
	 *	@throws DataAccessException
	 */	 

		public List<String> selectThirdOneAuthIdsByThirdChannelAndOneAuthId(@Param("thirdChannel")String thirdChannel , @Param("oneAuthId")String oneAuthId) throws DataAccessException;

	/**
	 *  Query DB table <tt>cif_third_one_auth_mapping</tt> for records.
	 *
	 *  <p>
	 *   
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, third_one_auth_id, third_channel, third_one_auth_name, properties, unique_id, gmt_create, gmt_modified, one_auth_id, domain from CIF_THIRD_ONE_AUTH_MAPPING where ((third_channel = ?) AND (third_one_auth_id = ?) AND (domain = ?) AND (one_auth_id = ?))</tt>
	 *
	 *	@param thirdChannel 
	 *	@param thirdOneAuthId 
	 *	@param domain 
	 *	@param oneAuthId 
	 *	@return ThirdOneAuthMappingDO
	 *	@throws DataAccessException
	 */	 

		public ThirdOneAuthMappingDO selectByThirdChannelThirdOneAuthIdAndDomainAndOneAuthId(@Param("thirdChannel")String thirdChannel , @Param("thirdOneAuthId")String thirdOneAuthId , @Param("domain")String domain , @Param("oneAuthId")String oneAuthId) throws DataAccessException;

	/**
	 *  Query DB table <tt>cif_third_one_auth_mapping</tt> for records.
	 *
	 *  <p>
	 *   
	 *  The sql statement for this operation is <br>
	 *  <tt>select one_auth_id from CIF_THIRD_ONE_AUTH_MAPPING where ((third_channel = ?) AND (third_one_auth_id = ?) AND (domain = ?))</tt>
	 *
	 *	@param thirdChannel 
	 *	@param thirdOneAuthId 
	 *	@param domain 
	 *	@return List<String>
	 *	@throws DataAccessException
	 */	 

		public List<String> selectOneAuthIdByThirdChannelThirdOneAuthIdAndDomain(@Param("thirdChannel")String thirdChannel , @Param("thirdOneAuthId")String thirdOneAuthId , @Param("domain")String domain) throws DataAccessException;

	/**
	 *  Query DB table <tt>cif_third_one_auth_mapping</tt> for records.
	 *
	 *  <p>
	 *   
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, third_one_auth_id, third_channel, third_one_auth_name, properties, unique_id, gmt_create, gmt_modified, one_auth_id, domain from CIF_THIRD_ONE_AUTH_MAPPING where (1 = 0)</tt>
	 *
	 *	@param thirdChannel 
	 *	@param thirdOneAuthIds 
	 *	@param domain 
	 *	@return List<ThirdOneAuthMappingDO>
	 *	@throws DataAccessException
	 */	 

		public List<ThirdOneAuthMappingDO> selectByThirdChannelThirdOneAuthIdsAndDomain(@Param("thirdChannel")String thirdChannel , @Param("thirdOneAuthIds")List<?> thirdOneAuthIds , @Param("domain")String domain) throws DataAccessException;

	/**
	 *  Query DB table <tt>cif_third_one_auth_mapping</tt> for records.
	 *
	 *  <p>
	 *   
	 *  The sql statement for this operation is <br>
	 *  <tt>select one_auth_id from CIF_THIRD_ONE_AUTH_MAPPING where (1 = 0)</tt>
	 *
	 *	@param thirdChannel 
	 *	@param thirdOneAuthIds 
	 *	@param domain 
	 *	@return List<String>
	 *	@throws DataAccessException
	 */	 

		public List<String> selectOneAuthIdsByThirdChannelThirdOneAuthIdsAndDomain(@Param("thirdChannel")String thirdChannel , @Param("thirdOneAuthIds")List<?> thirdOneAuthIds , @Param("domain")String domain) throws DataAccessException;

	/**
	 *  Query DB table <tt>cif_third_one_auth_mapping</tt> for records.
	 *
	 *  <p>
	 *   
	 *  The sql statement for this operation is <br>
	 *  <tt>select third_one_auth_id, one_auth_id from CIF_THIRD_ONE_AUTH_MAPPING where (1 = 0)</tt>
	 *
	 *	@param thirdChannel 
	 *	@param thirdOneAuthIds 
	 *	@param domain 
	 *	@return List<Map<String,Object>>
	 *	@throws DataAccessException
	 */	 

		public List<Map<String,Object>> selectThirdOneAuthIdWithOneAuthIdByThirdChannelThirdOneAuthIdsAndDomain(@Param("thirdChannel")String thirdChannel , @Param("thirdOneAuthIds")List<?> thirdOneAuthIds , @Param("domain")String domain) throws DataAccessException;

	/**
	 *  Query DB table <tt>cif_third_one_auth_mapping</tt> for records.
	 *
	 *  <p>
	 *   
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from CIF_THIRD_ONE_AUTH_MAPPING where ((third_channel = ?) AND (third_one_auth_id = ?) AND (domain = ?) AND (one_auth_id = ?))</tt>
	 *
	 *	@param thirdChannel 
	 *	@param thirdOneAuthId 
	 *	@param domain 
	 *	@param oneAuthId 
	 *	@return long
	 *	@throws DataAccessException
	 */	 

		public long selectCountByThirdChannelThirdOneAuthIdAndDomainAndOneAuthId(@Param("thirdChannel")String thirdChannel , @Param("thirdOneAuthId")String thirdOneAuthId , @Param("domain")String domain , @Param("oneAuthId")String oneAuthId) throws DataAccessException;

	/**
	 *  Query DB table <tt>cif_third_one_auth_mapping</tt> for records.
	 *
	 *  <p>
	 *   
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from CIF_THIRD_ONE_AUTH_MAPPING where (one_auth_id = ?)</tt>
	 *
	 *	@param oneAuthId 
	 *	@return long
	 *	@throws DataAccessException
	 */	 

		public long selectCountByOneAuthId(@Param("oneAuthId")String oneAuthId) throws DataAccessException;

	/**
	 *  Query DB table <tt>cif_third_one_auth_mapping</tt> for records.
	 *
	 *  <p>
	 *   
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, third_one_auth_id, third_channel, third_one_auth_name, properties, unique_id, gmt_create, gmt_modified, one_auth_id, domain from CIF_THIRD_ONE_AUTH_MAPPING where (1 = 0)</tt>
	 *
	 *	@param oneAuthIds 
	 *	@return List<ThirdOneAuthMappingDO>
	 *	@throws DataAccessException
	 */	 

		public List<ThirdOneAuthMappingDO> selectByOneAuthIds(@Param("oneAuthIds")List<?> oneAuthIds) throws DataAccessException;

	/**
	 *  Query DB table <tt>cif_third_one_auth_mapping</tt> for records.
	 *
	 *  <p>
	 *   
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, third_one_auth_id, third_channel, third_one_auth_name, properties, unique_id, gmt_create, gmt_modified, one_auth_id, domain from CIF_THIRD_ONE_AUTH_MAPPING where (1 = 0)</tt>
	 *
	 *	@param thirdChannel 
	 *	@param oneAuthIds 
	 *	@return List<ThirdOneAuthMappingDO>
	 *	@throws DataAccessException
	 */	 

		public List<ThirdOneAuthMappingDO> selectByThirdChannelAndOneAuthIds(@Param("thirdChannel")String thirdChannel , @Param("oneAuthIds")List<?> oneAuthIds) throws DataAccessException;

	/**
	 *  Query DB table <tt>cif_third_one_auth_mapping</tt> for records.
	 *
	 *  <p>
	 *   
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, third_one_auth_id, third_channel, third_one_auth_name, properties, unique_id, gmt_create, gmt_modified, one_auth_id, domain from CIF_THIRD_ONE_AUTH_MAPPING where ((third_channel = ?) AND (third_one_auth_id = ?) AND (domain = ?) AND (one_auth_id = ?)) for update</tt>
	 *
	 *	@param thirdChannel 
	 *	@param thirdOneAuthId 
	 *	@param domain 
	 *	@param oneAuthId 
	 *	@return ThirdOneAuthMappingDO
	 *	@throws DataAccessException
	 */	 

		public ThirdOneAuthMappingDO selectByThirdChannelThirdOneAuthIdAndDomainAndOneAuthIdForUpdate(@Param("thirdChannel")String thirdChannel , @Param("thirdOneAuthId")String thirdOneAuthId , @Param("domain")String domain , @Param("oneAuthId")String oneAuthId) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>cif_third_one_auth_mapping</tt>.
	 *
	 *  <p>
	 *   
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from CIF_THIRD_ONE_AUTH_MAPPING where (id = ?)</tt>
	 *
	 *	@param id 
	 *	@return int
	 *	@throws DataAccessException
	 */	 

		public int deleteById(@Param("id")String id) throws DataAccessException;

	/**
	 *  Query DB table <tt>cif_third_one_auth_mapping</tt> for records.
	 *
	 *  <p>
	 *   
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, third_one_auth_id, third_channel, third_one_auth_name, properties, unique_id, gmt_create, gmt_modified, one_auth_id, domain from CIF_THIRD_ONE_AUTH_MAPPING where (id = ?)</tt>
	 *
	 *	@param id 
	 *	@return ThirdOneAuthMappingDO
	 *	@throws DataAccessException
	 */	 

		public ThirdOneAuthMappingDO selectById(@Param("id")String id) throws DataAccessException;

}