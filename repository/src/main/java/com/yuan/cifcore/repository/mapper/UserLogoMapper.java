/*
 * Bench Inc.
 * Copyright (c) 2004 All Rights Reserved.
 */
package com.yuan.cifcore.repository.mapper;



// auto generated imports
//dao imports
import java.util.Map;
import java.util.HashMap;
import java.util.List;
import java.util.ArrayList;
import com.yuan.cifcore.repository.entity.UserLogoDO;
import org.springframework.dao.DataAccessException;
import java.util.Date;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import org.apache.ibatis.annotations.Param;
import com.baomidou.mybatisplus.core.mapper.BaseMapper;
//do imports

/**
 * A dao interface provides methods to access database table <tt>cif_user_logo</tt>.
 *
 * This file is generated by <tt>bench-gen-dal</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>bench</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/cif_user_logo.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>bench-gen-dal</tt> 
 * to generate this file.
 *
 * @author cold
 */
public interface UserLogoMapper  extends BaseMapper<UserLogoDO>{
	/**
	 *  Query DB table <tt>cif_user_logo</tt> for records.
	 *
	 *  <p>
	 *   
	 *  The sql statement for this operation is <br>
	 *  <tt>select user_id, gmt_modified, gmt_create, file_type, system_logo_id, image_resource_id from cif_user_logo where (user_id = ?)</tt>
	 *
	 *	@param userId 
	 *	@return UserLogoDO
	 *	@throws DataAccessException
	 */	 

		public UserLogoDO selectByUserId(@Param("userId")String userId) throws DataAccessException;

	/**
	 *  Query DB table <tt>cif_user_logo</tt> for records.
	 *
	 *  <p>
	 *   
	 *  The sql statement for this operation is <br>
	 *  <tt>select gmt_modified from cif_user_logo where (user_id = ?)</tt>
	 *
	 *	@param userId 
	 *	@return Date
	 *	@throws DataAccessException
	 */	 

		public Date selectGmtModifiedByUserId(@Param("userId")String userId) throws DataAccessException;

	/**
	 *  Query DB table <tt>cif_user_logo</tt> for records.
	 *
	 *  <p>
	 *   
	 *  The sql statement for this operation is <br>
	 *  <tt>select file_type from cif_user_logo where (user_id = ?)</tt>
	 *
	 *	@param userId 
	 *	@return String
	 *	@throws DataAccessException
	 */	 

		public String selectFileTypeByUserId(@Param("userId")String userId) throws DataAccessException;

	/**
	 *  Query DB table <tt>cif_user_logo</tt> for records.
	 *
	 *  <p>
	 *   
	 *  The sql statement for this operation is <br>
	 *  <tt>select user_id, gmt_modified, gmt_create, file_type, system_logo_id, image_resource_id from cif_user_logo where (user_id = ?) for update</tt>
	 *
	 *	@param userId 
	 *	@return UserLogoDO
	 *	@throws DataAccessException
	 */	 

		public UserLogoDO selectByUserIdForUpdate(@Param("userId")String userId) throws DataAccessException;

	/**
	 *  Query DB table <tt>cif_user_logo</tt> for records.
	 *
	 *  <p>
	 *   
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from cif_user_logo where (user_id = ?)</tt>
	 *
	 *	@param userId 
	 *	@return long
	 *	@throws DataAccessException
	 */	 

		public long selectExistsByUserId(@Param("userId")String userId) throws DataAccessException;

	/**
	 *  Query DB table <tt>cif_user_logo</tt> for records.
	 *
	 *  <p>
	 *   
	 *  The sql statement for this operation is <br>
	 *  <tt>select gmt_modified from cif_user_logo where (user_id = ?)</tt>
	 *
	 *	@param userId 
	 *	@return Date
	 *	@throws DataAccessException
	 */	 

		public Date selectGmtModifiedById(@Param("userId")String userId) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>cif_user_logo</tt>.
	 *
	 *  <p>
	 *   
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from cif_user_logo where (user_id = ?)</tt>
	 *
	 *	@param userId 
	 *	@return int
	 *	@throws DataAccessException
	 */	 

		public int deleteByUserId(@Param("userId")String userId) throws DataAccessException;

	/**
	 *  Update DB table <tt>cif_user_logo</tt>.
	 *
	 *  <p>
	 *   
	 *  The sql statement for this operation is <br>
	 *  <tt>update cif_user_logo set gmt_modified=@db@.sysdate, file_type=?, system_logo_id=?, image_resource_id=? where (user_id = ?)</tt>
	 *
	 *	@param fileType 
	 *	@param systemLogoId 
	 *	@param imageResourceId 
	 *	@param userId 
	 *	@return int
	 *	@throws DataAccessException
	 */	 

		public int updateByUserId(@Param("fileType")String fileType , @Param("systemLogoId")long systemLogoId , @Param("imageResourceId")String imageResourceId , @Param("userId")String userId) throws DataAccessException;

	/**
	 *  Query DB table <tt>cif_user_logo</tt> for records.
	 *
	 *  <p>
	 *   
	 *  The sql statement for this operation is <br>
	 *  <tt>select system_logo_id from cif_user_logo where (user_id = ?)</tt>
	 *
	 *	@param userId 
	 *	@return long
	 *	@throws DataAccessException
	 */	 

		public long selectSystemLogoIdByUserId(@Param("userId")String userId) throws DataAccessException;

	/**
	 *  Query DB table <tt>cif_user_logo</tt> for records.
	 *
	 *  <p>
	 *   
	 *  The sql statement for this operation is <br>
	 *  <tt>select user_id, gmt_modified, gmt_create, file_type, system_logo_id, image_resource_id from cif_user_logo where (1 = 0)</tt>
	 *
	 *	@param userIds 
	 *	@return List<UserLogoDO>
	 *	@throws DataAccessException
	 */	 

		public List<UserLogoDO> selectByUserIds(@Param("userIds")List<?> userIds) throws DataAccessException;

	/**
	 *  Update DB table <tt>cif_user_logo</tt>.
	 *
	 *  <p>
	 *   
	 *  The sql statement for this operation is <br>
	 *  <tt>update cif_user_logo set gmt_modified=@db@.sysdate where (user_id = ?)</tt>
	 *
	 *	@param userId 
	 *	@return int
	 *	@throws DataAccessException
	 */	 

		public int updateGmtModifiedByUserId(@Param("userId")String userId) throws DataAccessException;

	/**
	 *  Update DB table <tt>cif_user_logo</tt>.
	 *
	 *  <p>
	 *   
	 *  The sql statement for this operation is <br>
	 *  <tt>update cif_user_logo set gmt_modified=@db@.sysdate where (1 = 0)</tt>
	 *
	 *	@param userIds 
	 *	@return int
	 *	@throws DataAccessException
	 */	 

		public int updateGmtModifiedByUserIds(@Param("userIds")List<?> userIds) throws DataAccessException;

	/**
	 *  Query DB table <tt>cif_user_logo</tt> for records.
	 *
	 *  <p>
	 *   
	 *  The sql statement for this operation is <br>
	 *  <tt>select user_id, gmt_modified, gmt_create, file_type, system_logo_id, image_resource_id from cif_user_logo where (1 = 0)</tt>
	 *
	 *	@param systemLogoId 
	 *	@param userId 
	 *	@param minGmtCreate 
	 *	@param maxGmtCreate 
	 *	@param minGmtModified 
	 *	@param maxGmtModified 
	 *	@param imageResourceId 
	 *	@param orderBy 
	 *	@param page 
	 *	@return List<UserLogoDO>
	 *	@throws DataAccessException
	 */	 

		public List<UserLogoDO> search(@Param("systemLogoId")long systemLogoId , @Param("userId")String userId , @Param("minGmtCreate")Date minGmtCreate , @Param("maxGmtCreate")Date maxGmtCreate , @Param("minGmtModified")Date minGmtModified , @Param("maxGmtModified")Date maxGmtModified , @Param("imageResourceId")String imageResourceId , @Param("orderBy")String orderBy , @Param("page")Page<UserLogoDO> page) throws DataAccessException;

}