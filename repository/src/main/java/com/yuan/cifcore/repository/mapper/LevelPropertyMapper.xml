<?xml version="1.0" encoding="GB2312" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>bench-gen-dal</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>bench</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>bench-gen-dal</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author nowli                                                          -->
<!-- ============================================================================= -->

<mapper namespace="com.yuan.cifcore.repository.mapper.LevelPropertyMapper">
	
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table cif_level_property -->
    <resultMap id="RM-LEVEL-PROPERTY" type="com.yuan.cifcore.repository.entity.LevelPropertyDO">
        <result property="id" column="id"  javaType="long"  jdbcType="DECIMAL"/>
        <result property="levelName" column="level_name"  javaType="java.lang.String"  jdbcType="VARCHAR"/>
        <result property="levelValue" column="level_value"  javaType="java.lang.String"  jdbcType="LONGVARCHAR"/>
        <result property="propertyName" column="property_name"  javaType="java.lang.String"  jdbcType="VARCHAR"/>
        <result property="propertyValue" column="property_value"  javaType="java.lang.String"  jdbcType="LONGVARCHAR"/>
        <result property="gmtCreate" column="gmt_create"  javaType="java.util.Date"  jdbcType="TIMESTAMP"/>
        <result property="gmtModified" column="gmt_modified"  javaType="java.util.Date"  jdbcType="TIMESTAMP"/>
        <result property="creater" column="creater"  javaType="java.lang.String"  jdbcType="VARCHAR"/>
        <result property="modifier" column="modifier"  javaType="java.lang.String"  jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
         id  ,
         level_name  ,
         level_value  ,
         property_name  ,
         property_value  ,
         gmt_create  ,
         gmt_modified  ,
         creater  ,
         modifier 
    </sql>




    <!-- ============================================= -->
    <!-- mapped statements for IbatisLevelPropertyDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisLevelPropertyDAO.selectById -->
    <select id="selectById" resultMap="RM-LEVEL-PROPERTY">
    <![CDATA[
        select id, level_name, level_value, property_name, property_value, gmt_create, gmt_modified, creater, modifier from cif_level_property where (id = #{id})
    ]]>
    </select>
    <!-- mapped statement for IbatisLevelPropertyDAO.selectByLevelNameLevelValue -->
    <select id="selectByLevelNameLevelValue" resultMap="RM-LEVEL-PROPERTY">
    <![CDATA[
        select id, level_name, level_value, property_name, property_value, gmt_create, gmt_modified, creater, modifier from cif_level_property where ((level_name = #{levelName}) AND (level_value = #{levelValue}))
    ]]>
    </select>
    <!-- mapped statement for IbatisLevelPropertyDAO.updatePropertyValue -->
    <update id="updatePropertyValue">
    <![CDATA[
        update cif_level_property set level_value=#{levelValue}, gmt_modified=sysdate(), modifier=#{modifier} where ((level_name = #{levelName}) AND (level_value = #{levelValue2}))
    ]]>
    </update>

 

</mapper>