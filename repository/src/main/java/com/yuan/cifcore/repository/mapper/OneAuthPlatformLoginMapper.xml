<?xml version="1.0" encoding="GB2312" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>bench-gen-dal</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>bench</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>bench-gen-dal</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author nowli                                                          -->
<!-- ============================================================================= -->

<mapper namespace="com.yuan.cifcore.repository.mapper.OneAuthPlatformLoginMapper">
	
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table cif_one_auth_platform_login -->
    <resultMap id="RM-ONE-AUTH-PLATFORM-LOGIN" type="com.yuan.cifcore.repository.entity.OneAuthPlatformLoginDO">
        <result property="id" column="id"  javaType="long"  jdbcType="DECIMAL"/>
        <result property="oneAuthId" column="one_auth_id"  javaType="java.lang.String"  jdbcType="VARCHAR"/>
        <result property="loggedPlatformType" column="logged_platform_type"  javaType="java.lang.String"  jdbcType="VARCHAR"/>
        <result property="gmtSuccess" column="gmt_success"  javaType="java.util.Date"  jdbcType="TIMESTAMP"/>
        <result property="loggedLoginIp" column="logged_login_ip"  javaType="java.lang.String"  jdbcType="VARCHAR"/>
        <result property="loggedLoginSessionId" column="logged_login_session_id"  javaType="java.lang.String"  jdbcType="VARCHAR"/>
        <result property="loggedLoginKey" column="logged_login_key"  javaType="java.lang.String"  jdbcType="VARCHAR"/>
        <result property="loggedSignKey" column="logged_sign_key"  javaType="java.lang.String"  jdbcType="VARCHAR"/>
        <result property="loggedCryptKey" column="logged_crypt_key"  javaType="java.lang.String"  jdbcType="VARCHAR"/>
        <result property="loggedCryptKeyType" column="logged_crypt_key_type"  javaType="java.lang.String"  jdbcType="VARCHAR"/>
        <result property="platformLoginSeq" column="platform_login_seq"  javaType="int"  jdbcType="DECIMAL"/>
        <result property="logged" column="logged"  javaType="boolean"  jdbcType="DECIMAL"/>
        <result property="gmtCreate" column="gmt_create"  javaType="java.util.Date"  jdbcType="TIMESTAMP"/>
        <result property="gmtModified" column="gmt_modified"  javaType="java.util.Date"  jdbcType="TIMESTAMP"/>
        <result property="loggedDeviceType" column="logged_device_type"  javaType="java.lang.String"  jdbcType="VARCHAR"/>
        <result property="loggedDeviceInfo" column="logged_device_info"  javaType="java.lang.String"  jdbcType="LONGVARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
         id  ,
         one_auth_id  ,
         logged_platform_type  ,
         gmt_success  ,
         logged_login_ip  ,
         logged_login_session_id  ,
         logged_login_key  ,
         logged_sign_key  ,
         logged_crypt_key  ,
         logged_crypt_key_type  ,
         platform_login_seq  ,
         logged  ,
         gmt_create  ,
         gmt_modified  ,
         logged_device_type  ,
         logged_device_info 
    </sql>




    <!-- ============================================= -->
    <!-- mapped statements for IbatisOneAuthPlatformLoginDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisOneAuthPlatformLoginDAO.selectById -->
    <select id="selectById" resultMap="RM-ONE-AUTH-PLATFORM-LOGIN">
    <![CDATA[
        select id, one_auth_id, logged_platform_type, gmt_success, logged_login_ip, logged_login_session_id, logged_login_key, logged_sign_key, logged_crypt_key, logged_crypt_key_type, platform_login_seq, logged, gmt_create, gmt_modified, logged_device_type, logged_device_info from cif_one_auth_platform_login where (id = #{id})
    ]]>
    </select>
    <!-- mapped statement for IbatisOneAuthPlatformLoginDAO.selectByLoggedLoginKey -->
    <select id="selectByLoggedLoginKey" resultMap="RM-ONE-AUTH-PLATFORM-LOGIN">
    <![CDATA[
        select id, one_auth_id, logged_platform_type, gmt_success, logged_login_ip, logged_login_session_id, logged_login_key, logged_sign_key, logged_crypt_key, logged_crypt_key_type, platform_login_seq, logged, gmt_create, gmt_modified, logged_device_type, logged_device_info from cif_one_auth_platform_login where (logged_login_key = #{loggedLoginKey})
    ]]>
    </select>
    <!-- mapped statement for IbatisOneAuthPlatformLoginDAO.selectMaxPlatformLoginSeqByOneAuthIdAndPlatformType -->
    <select id="selectMaxPlatformLoginSeqByOneAuthIdAndPlatformType" resultType="int">
    <![CDATA[
        select max(platform_login_seq) from cif_one_auth_platform_login where ((one_auth_id = #{oneAuthId}) AND (logged_platform_type = #{loggedPlatformType}))
    ]]>
    </select>
    <!-- mapped statement for IbatisOneAuthPlatformLoginDAO.selectEarliestLogoutIdByOneAuthIdPlatformTypeAndMaxPlatformLoginSeq -->
    <select id="selectEarliestLogoutIdByOneAuthIdPlatformTypeAndMaxPlatformLoginSeq" resultType="long">
    <![CDATA[
        select id from cif_one_auth_platform_login where ((one_auth_id = #{oneAuthId}) AND (logged_platform_type = #{loggedPlatformType}) AND (logged = 0) AND (platform_login_seq <= #{platformLoginSeq})) order by gmt_success ASC limit 0,1
    ]]>
    </select>
    <!-- mapped statement for IbatisOneAuthPlatformLoginDAO.selectEarliestLoggedIdByOneAuthIdPlatformTypeAndMaxPlatformLoginSeq -->
    <select id="selectEarliestLoggedIdByOneAuthIdPlatformTypeAndMaxPlatformLoginSeq" resultType="long">
    <![CDATA[
        select id from cif_one_auth_platform_login where ((one_auth_id = #{oneAuthId}) AND (logged_platform_type = #{loggedPlatformType}) AND (platform_login_seq <= #{platformLoginSeq})) order by gmt_success ASC limit 0,1
    ]]>
    </select>
    <!-- mapped statement for IbatisOneAuthPlatformLoginDAO.updateLoginSuccess -->
    <update id="updateLoginSuccess">
    <![CDATA[
        update cif_one_auth_platform_login set gmt_success=sysdate(), gmt_modified=sysdate(), logged_login_ip=#{loggedLoginIp}, logged_login_session_id=#{loggedLoginSessionId}, logged_login_key=#{loggedLoginKey}, logged_sign_key=#{loggedSignKey}, logged_crypt_key=#{loggedCryptKey}, logged_crypt_key_type=#{loggedCryptKeyType}, logged=1, logged_device_type=#{loggedDeviceType}, logged_device_info=#{loggedDeviceInfo} where (id = #{id})
    ]]>
    </update>

    <!-- mapped statement for IbatisOneAuthPlatformLoginDAO.updateLogoutByLoginKey -->
    <update id="updateLogoutByLoginKey">
    <![CDATA[
        update cif_one_auth_platform_login set logged=0, gmt_modified=sysdate() where (id = #{id})
    ]]>
    </update>

    <!-- mapped statement for IbatisOneAuthPlatformLoginDAO.updateLogoutByLoggedLoginSessionId -->
    <update id="updateLogoutByLoggedLoginSessionId">
    <![CDATA[
        update cif_one_auth_platform_login set logged=0, gmt_modified=sysdate() where (logged_login_session_id = #{loggedLoginSessionId})
    ]]>
    </update>

    <!-- mapped statement for IbatisOneAuthPlatformLoginDAO.updateLogoutByOneAuthId -->
    <update id="updateLogoutByOneAuthId">
    <![CDATA[
        update cif_one_auth_platform_login set logged=0, gmt_modified=sysdate() where ((one_auth_id = #{oneAuthId}) AND (logged = 1))
    ]]>
    </update>

 

</mapper>