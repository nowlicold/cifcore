<?xml version="1.0" encoding="GB2312" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>bench-gen-dal</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>bench</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>bench-gen-dal</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author nowli                                                          -->
<!-- ============================================================================= -->

<mapper namespace="com.yuan.cifcore.repository.mapper.OneAuthMapper">
	
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table cif_one_auth -->
    <resultMap id="RM-ONE-AUTH" type="com.yuan.cifcore.repository.entity.OneAuthDO">
        <result property="oneAuthId" column="one_auth_id"  javaType="java.lang.String"  jdbcType="VARCHAR"/>
        <result property="authName" column="auth_name"  javaType="java.lang.String"  jdbcType="VARCHAR"/>
        <result property="authNameType" column="auth_name_type"  javaType="java.lang.String"  jdbcType="VARCHAR"/>
        <result property="gmtCreate" column="gmt_create"  javaType="java.util.Date"  jdbcType="TIMESTAMP"/>
        <result property="gmtModified" column="gmt_modified"  javaType="java.util.Date"  jdbcType="TIMESTAMP"/>
        <result property="cell" column="cell"  javaType="java.lang.String"  jdbcType="VARCHAR"/>
        <result property="cellValidate" column="cell_validate"  javaType="boolean"  jdbcType="DECIMAL"/>
        <result property="domain" column="domain"  javaType="java.lang.String"  jdbcType="VARCHAR"/>
        <result property="subDomain" column="sub_domain"  javaType="java.lang.String"  jdbcType="VARCHAR"/>
        <result property="defaultUserId" column="default_user_id"  javaType="java.lang.String"  jdbcType="VARCHAR"/>
        <result property="loginPassword" column="login_password"  javaType="java.lang.String"  jdbcType="VARCHAR"/>
        <result property="canLogin" column="can_login"  javaType="boolean"  jdbcType="DECIMAL"/>
        <result property="accountPassword" column="account_password"  javaType="java.lang.String"  jdbcType="VARCHAR"/>
        <result property="realName" column="real_name"  javaType="java.lang.String"  jdbcType="VARCHAR"/>
        <result property="email" column="email"  javaType="java.lang.String"  jdbcType="VARCHAR"/>
        <result property="qq" column="qq"  javaType="java.lang.String"  jdbcType="VARCHAR"/>
        <result property="certType" column="cert_type"  javaType="java.lang.String"  jdbcType="VARCHAR"/>
        <result property="certNo" column="cert_no"  javaType="java.lang.String"  jdbcType="VARCHAR"/>
        <result property="emailValidate" column="email_validate"  javaType="boolean"  jdbcType="DECIMAL"/>
        <result property="qqValidate" column="qq_validate"  javaType="boolean"  jdbcType="DECIMAL"/>
        <result property="gmtChangeIdentity" column="gmt_change_identity"  javaType="java.util.Date"  jdbcType="TIMESTAMP"/>
        <result property="sex" column="sex"  javaType="java.lang.String"  jdbcType="VARCHAR"/>
        <result property="birthday" column="birthday"  javaType="java.util.Date"  jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
         one_auth_id  ,
         auth_name  ,
         auth_name_type  ,
         gmt_create  ,
         gmt_modified  ,
         cell  ,
         cell_validate  ,
         domain  ,
         sub_domain  ,
         default_user_id  ,
         login_password  ,
         can_login  ,
         account_password  ,
         real_name  ,
         email  ,
         qq  ,
         cert_type  ,
         cert_no  ,
         email_validate  ,
         qq_validate  ,
         gmt_change_identity  ,
         sex  ,
         birthday 
    </sql>




    <!-- ============================================= -->
    <!-- mapped statements for IbatisOneAuthDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisOneAuthDAO.selectByAuthName -->
    <select id="selectByAuthName" resultMap="RM-ONE-AUTH">
    <![CDATA[
        select one_auth_id, auth_name, auth_name_type, gmt_create, gmt_modified, cell, cell_validate, domain, sub_domain, default_user_id, login_password, can_login, account_password, real_name, email, qq, cert_type, cert_no, email_validate, qq_validate, gmt_change_identity, sex, birthday from cif_one_auth where (auth_name = #{authName})
    ]]>
    </select>
    <!-- mapped statement for IbatisOneAuthDAO.selectByOneAuthId -->
    <select id="selectByOneAuthId" resultMap="RM-ONE-AUTH">
    <![CDATA[
        select one_auth_id, auth_name, auth_name_type, gmt_create, gmt_modified, cell, cell_validate, domain, sub_domain, default_user_id, login_password, can_login, account_password, real_name, email, qq, cert_type, cert_no, email_validate, qq_validate, gmt_change_identity, sex, birthday from cif_one_auth where (one_auth_id = #{oneAuthId})
    ]]>
    </select>
    <!-- mapped statement for IbatisOneAuthDAO.selectByOneAuthIds -->
    <select id="selectByOneAuthIds" resultMap="RM-ONE-AUTH">
        select				one_auth_id,auth_name,auth_name_type,gmt_create,gmt_modified,cell,cell_validate,domain,				sub_domain,default_user_id,login_password,can_login,account_password,real_name,email,qq,				cert_type,cert_no,email_validate,qq_validate,gmt_change_identity,sex,birthday				from				cif_one_auth where				<foreach open=" one_auth_id in (" close=")" separator="," collection="oneAuthIds" item="item">					#{item}				</foreach>
    </select>
    <!-- mapped statement for IbatisOneAuthDAO.selectByCertTypeAndCertNoAndRealName -->
    <select id="selectByCertTypeAndCertNoAndRealName" resultMap="RM-ONE-AUTH">
        select				one_auth_id,auth_name,auth_name_type,gmt_create,gmt_modified,cell,cell_validate,domain,				sub_domain,default_user_id,login_password,can_login,account_password,real_name,email,qq,				cert_type,cert_no,email_validate,qq_validate,gmt_change_identity,sex,birthday				from				cif_one_auth				<where>					<if test="certNo != null and certNo != ''">						and cert_no=#{certNo}                    </if>                    <if test="certType != null and certType != ''">						and cert_type=#{certType}                    </if>                    <if test="realName != null and realName != ''">						and real_name=#{realName}                    </if>				</where>
    </select>
    <!-- mapped statement for IbatisOneAuthDAO.updateDefaultUserId -->
    <update id="updateDefaultUserId">
    <![CDATA[
        update cif_one_auth set gmt_modified=sysdate(), default_user_id=#{defaultUserId} where (one_auth_id = #{oneAuthId})
    ]]>
    </update>

    <!-- mapped statement for IbatisOneAuthDAO.updateValidatedCell -->
    <update id="updateValidatedCell">
    <![CDATA[
        update cif_one_auth set gmt_modified=sysdate(), cell=#{cell}, cell_validate=#{cellValidate} where (one_auth_id = #{oneAuthId})
    ]]>
    </update>

    <!-- mapped statement for IbatisOneAuthDAO.updateAuthName -->
    <update id="updateAuthName">
    <![CDATA[
        update cif_one_auth set gmt_modified=sysdate(), auth_name=#{authName} where (one_auth_id = #{oneAuthId})
    ]]>
    </update>

    <!-- mapped statement for IbatisOneAuthDAO.updateLoginPassword -->
    <update id="updateLoginPassword">
    <![CDATA[
        update cif_one_auth set login_password=#{loginPassword}, gmt_modified=sysdate() where (one_auth_id = #{oneAuthId})
    ]]>
    </update>

    <!-- mapped statement for IbatisOneAuthDAO.updateCanLogin -->
    <update id="updateCanLogin">
    <![CDATA[
        update cif_one_auth set can_login=#{canLogin}, gmt_modified=sysdate() where (one_auth_id = #{oneAuthId})
    ]]>
    </update>

    <!-- mapped statement for IbatisOneAuthDAO.updateIdentify -->
    <update id="updateIdentify">
        update cif_one_auth set gmt_modified=sysdate() 			<if test="gmtChangeIdentity != null">				,gmt_change_identity=#{gmtChangeIdentity}			</if>			<if test="realName != null and realName != ''">				,real_name=#{realName}			</if>			<if test="certNo != null and certNo != ''">				,cert_no=#{certNo}			</if>			<if test="certType != null and certType != ''">				,cert_type=#{certType}			</if> 			where one_auth_id=#{oneAuthId}
    </update>

    <!-- mapped statement for IbatisOneAuthDAO.search -->
    <!-- queryPage分页方法dba注意sqlreview -->
    <select id="search" resultMap="RM-ONE-AUTH">
        select				one_auth_id,auth_name,auth_name_type,gmt_create,gmt_modified,cell,cell_validate,domain,				sub_domain,default_user_id,login_password,can_login,account_password,real_name,email,qq,				cert_type,cert_no,email_validate,qq_validate,gmt_change_identity,sex,birthday				from				cif_one_auth			 	<where>					<if test="oneAuthId != null and oneAuthId != ''">						and one_auth_id=#{oneAuthId}                    </if>					<if test="authName != null and authName != ''">						and auth_name=#{authName}                    </if>					<if test="authNameType != null and authNameType != ''">						and auth_name_type=#{authNameType}                    </if>					<if test="email != null and email != ''">						and email=#{email}                    </if>					<if test="qq != null and qq != ''">						and qq=#{qq}                    </if>					<if test="cell != null and cell != ''">						and cell=#{cell}                    </if>					<if test="certNo != null and certNo != ''">						and cert_no=#{certNo}                    </if>                    <if test="beginCreateDate != null">                    	<![CDATA[							and gmt_create >= #{beginCreateDate}						]]>                    </if>                    <if test="endCreateDate != null">                    	<![CDATA[							and gmt_create <= #{endCreateDate}						]]>                    </if>					<if test="domain != null and domain != ''">						and domain=#{domain}                    </if>					<if test="subDomain != null and subDomain != ''">						and sub_domain=#{subDomain}                    </if>			 	</where>
    </select>
 

</mapper>