<?xml version="1.0" encoding="GB2312" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>bench-gen-dal</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>bench</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>bench-gen-dal</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author nowli                                                          -->
<!-- ============================================================================= -->

<mapper namespace="com.yuan.cifcore.repository.mapper.UserPlatformLoginMapper">
	
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table cif_user_platform_login -->
    <resultMap id="RM-USER-PLATFORM-LOGIN" type="com.yuan.cifcore.repository.entity.UserPlatformLoginDO">
        <result property="id" column="id"  javaType="long"  jdbcType="DECIMAL"/>
        <result property="userId" column="user_id"  javaType="java.lang.String"  jdbcType="VARCHAR"/>
        <result property="loggedLoginName" column="logged_login_name"  javaType="java.lang.String"  jdbcType="VARCHAR"/>
        <result property="loggedPlatformType" column="logged_platform_type"  javaType="java.lang.String"  jdbcType="VARCHAR"/>
        <result property="gmtSuccess" column="gmt_success"  javaType="java.util.Date"  jdbcType="TIMESTAMP"/>
        <result property="loggedLoginIp" column="logged_login_ip"  javaType="java.lang.String"  jdbcType="VARCHAR"/>
        <result property="loggedLoginSessionId" column="logged_login_session_id"  javaType="java.lang.String"  jdbcType="VARCHAR"/>
        <result property="loggedLoginKey" column="logged_login_key"  javaType="java.lang.String"  jdbcType="VARCHAR"/>
        <result property="loggedSignKey" column="logged_sign_key"  javaType="java.lang.String"  jdbcType="VARCHAR"/>
        <result property="loggedCryptKey" column="logged_crypt_key"  javaType="java.lang.String"  jdbcType="VARCHAR"/>
        <result property="loggedCryptKeyType" column="logged_crypt_key_type"  javaType="java.lang.String"  jdbcType="VARCHAR"/>
        <result property="platformLoginSeq" column="platform_login_seq"  javaType="int"  jdbcType="DECIMAL"/>
        <result property="logged" column="logged"  javaType="boolean"  jdbcType="DECIMAL"/>
        <result property="gmtCreate" column="gmt_create"  javaType="java.util.Date"  jdbcType="TIMESTAMP"/>
        <result property="gmtModified" column="gmt_modified"  javaType="java.util.Date"  jdbcType="TIMESTAMP"/>
        <result property="loggedDeviceType" column="logged_device_type"  javaType="java.lang.String"  jdbcType="VARCHAR"/>
        <result property="loggedDeviceInfo" column="logged_device_info"  javaType="java.lang.String"  jdbcType="LONGVARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
         id  ,
         user_id  ,
         logged_login_name  ,
         logged_platform_type  ,
         gmt_success  ,
         logged_login_ip  ,
         logged_login_session_id  ,
         logged_login_key  ,
         logged_sign_key  ,
         logged_crypt_key  ,
         logged_crypt_key_type  ,
         platform_login_seq  ,
         logged  ,
         gmt_create  ,
         gmt_modified  ,
         logged_device_type  ,
         logged_device_info 
    </sql>




    <!-- ============================================= -->
    <!-- mapped statements for IbatisUserPlatformLoginDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisUserPlatformLoginDAO.selectById -->
    <select id="selectById" resultMap="RM-USER-PLATFORM-LOGIN">
    <![CDATA[
        select id, user_id, logged_login_name, logged_platform_type, gmt_success, logged_login_ip, logged_login_session_id, logged_login_key, logged_sign_key, logged_crypt_key, logged_crypt_key_type, platform_login_seq, gmt_create, gmt_modified, logged, logged_device_type, logged_device_info from cif_user_platform_login where (id = #{id})
    ]]>
    </select>
    <!-- mapped statement for IbatisUserPlatformLoginDAO.selectByIdForUpdate -->
    <select id="selectByIdForUpdate" resultMap="RM-USER-PLATFORM-LOGIN">
    <![CDATA[
        select id, user_id, logged_login_name, logged_platform_type, gmt_success, logged_login_ip, logged_login_session_id, logged_login_key, logged_sign_key, logged_crypt_key, logged_crypt_key_type, platform_login_seq, gmt_create, gmt_modified, logged, logged_device_type, logged_device_info from cif_user_platform_login where (id = #{id}) for update 
    ]]>
    </select>
    <!-- mapped statement for IbatisUserPlatformLoginDAO.selectByLoggedLoginKey -->
    <select id="selectByLoggedLoginKey" resultMap="RM-USER-PLATFORM-LOGIN">
    <![CDATA[
        select id, user_id, logged_login_name, logged_platform_type, gmt_success, logged_login_ip, logged_login_session_id, logged_login_key, logged_sign_key, logged_crypt_key, logged_crypt_key_type, platform_login_seq, gmt_create, gmt_modified, logged, logged_device_type, logged_device_info from cif_user_platform_login where (logged_login_key = #{loggedLoginKey})
    ]]>
    </select>
    <!-- mapped statement for IbatisUserPlatformLoginDAO.selectLoggedByUserIdAndPlatformType -->
    <select id="selectLoggedByUserIdAndPlatformType" resultMap="RM-USER-PLATFORM-LOGIN">
    <![CDATA[
        select id, user_id, logged_login_name, logged_platform_type, gmt_success, logged_login_ip, logged_login_session_id, logged_login_key, logged_sign_key, logged_crypt_key, logged_crypt_key_type, platform_login_seq, gmt_create, gmt_modified, logged, logged_device_type, logged_device_info from cif_user_platform_login where ((user_id = #{userId}) AND (logged_platform_type = #{loggedPlatformType}) AND (logged = 1)) order by gmt_create DESC
    ]]>
    </select>
    <!-- mapped statement for IbatisUserPlatformLoginDAO.selectLoggedSessionIdsByUserIdAndPlatformType -->
    <select id="selectLoggedSessionIdsByUserIdAndPlatformType" resultType="java.lang.String">
    <![CDATA[
        select logged_login_session_id from cif_user_platform_login where ((user_id = #{userId}) AND (logged_platform_type = #{loggedPlatformType}) AND (logged = 1) AND (logged_login_session_id IS NOT NULL))
    ]]>
    </select>
    <!-- mapped statement for IbatisUserPlatformLoginDAO.selectLoggedByUserIdsAndPlatformType -->
    <select id="selectLoggedByUserIdsAndPlatformType" resultMap="RM-USER-PLATFORM-LOGIN">
        select id,user_id,logged_login_name,logged_platform_type,gmt_success,logged_login_ip,logged_login_session_id,logged_login_key,			logged_sign_key,logged_crypt_key,logged_crypt_key_type,platform_login_seq,gmt_create,			gmt_modified,logged,logged_device_type,logged_device_info			  from cif_user_platform_login where user_id in			<foreach open="(" close=")" separator="," collection="userIds" item="item">						#{item}			</foreach>			 and logged_platform_type=#{platformType} and logged=1 and logged_login_session_id is not null
    </select>
    <!-- mapped statement for IbatisUserPlatformLoginDAO.selectUserIdAndLoggedSessionIdsByUserIdsAndPlatformType -->
    <select id="selectUserIdAndLoggedSessionIdsByUserIdsAndPlatformType" resultType="java.util.HashMap">
        select user_id,logged_login_session_id			  from cif_user_platform_login where user_id in			<foreach open="(" close=")" separator="," collection="userIds" item="item">						#{item}			</foreach> and logged_platform_type=#{platformType} and logged=1 and logged_login_session_id is not null
    </select>
    <!-- mapped statement for IbatisUserPlatformLoginDAO.updateLoginSuccess -->
    <update id="updateLoginSuccess">
    <![CDATA[
        update cif_user_platform_login set logged_login_name=#{loggedLoginName}, gmt_success=sysdate(), gmt_modified=sysdate(), logged_login_ip=#{loggedLoginIp}, logged_login_session_id=#{loggedLoginSessionId}, logged_login_key=#{loggedLoginKey}, logged_sign_key=#{loggedSignKey}, logged_crypt_key=#{loggedCryptKey}, logged_crypt_key_type=#{loggedCryptKeyType}, logged=1, logged_device_type=#{loggedDeviceType}, logged_device_info=#{loggedDeviceInfo} where (id = #{id})
    ]]>
    </update>

    <!-- mapped statement for IbatisUserPlatformLoginDAO.selectMaxPlatformLoginSeqByUserIdAndPlatformType -->
    <select id="selectMaxPlatformLoginSeqByUserIdAndPlatformType" resultType="int">
    <![CDATA[
        select max(platform_login_seq) from cif_user_platform_login where ((user_id = #{userId}) AND (logged_platform_type = #{loggedPlatformType}))
    ]]>
    </select>
    <!-- mapped statement for IbatisUserPlatformLoginDAO.selectEarliestLogoutIdByUserIdPlatformTypeAndMaxPlatformLoginSeq -->
    <select id="selectEarliestLogoutIdByUserIdPlatformTypeAndMaxPlatformLoginSeq" resultType="long">
    <![CDATA[
        select id from cif_user_platform_login where ((user_id = #{userId}) AND (logged_platform_type = #{loggedPlatformType}) AND (logged = 0) AND (platform_login_seq <= #{platformLoginSeq})) order by gmt_success ASC limit 0,1
    ]]>
    </select>
    <!-- mapped statement for IbatisUserPlatformLoginDAO.selectEarliestLoggedIdByUserIdPlatformTypeAndMaxPlatformLoginSeq -->
    <select id="selectEarliestLoggedIdByUserIdPlatformTypeAndMaxPlatformLoginSeq" resultMap="RM-USER-PLATFORM-LOGIN">
    <![CDATA[
        select id, user_id, logged_login_name, logged_platform_type, gmt_success, logged_login_ip, logged_login_session_id, logged_login_key, logged_sign_key, logged_crypt_key, logged_crypt_key_type, platform_login_seq, gmt_create, gmt_modified, logged, logged_device_type, logged_device_info from cif_user_platform_login where ((user_id = #{userId}) AND (logged_platform_type = #{loggedPlatformType}) AND (platform_login_seq <= #{platformLoginSeq})) order by gmt_success ASC limit 0,1
    ]]>
    </select>
    <!-- mapped statement for IbatisUserPlatformLoginDAO.selectByUserIdAndPlatformTypeAndLoginSessinId -->
    <select id="selectByUserIdAndPlatformTypeAndLoginSessinId" resultMap="RM-USER-PLATFORM-LOGIN">
    <![CDATA[
        select id, user_id, logged_login_name, logged_platform_type, gmt_success, logged_login_ip, logged_login_session_id, logged_login_key, logged_sign_key, logged_crypt_key, logged_crypt_key_type, platform_login_seq, gmt_create, gmt_modified, logged, logged_device_type, logged_device_info from cif_user_platform_login where ((user_id = #{userId}) AND (logged_platform_type = #{loggedPlatformType}) AND (logged_login_session_id = #{loggedLoginSessionId}) AND (logged = 1))
    ]]>
    </select>
    <!-- mapped statement for IbatisUserPlatformLoginDAO.selectByUserIdAndPlatformTypeAndLoginKey -->
    <select id="selectByUserIdAndPlatformTypeAndLoginKey" resultMap="RM-USER-PLATFORM-LOGIN">
    <![CDATA[
        select id, user_id, logged_login_name, logged_platform_type, gmt_success, logged_login_ip, logged_login_session_id, logged_login_key, logged_sign_key, logged_crypt_key, logged_crypt_key_type, platform_login_seq, gmt_create, gmt_modified, logged, logged_device_type, logged_device_info from cif_user_platform_login where ((user_id = #{userId}) AND (logged_platform_type = #{loggedPlatformType}) AND (logged_login_key = #{loggedLoginKey}) AND (logged = 1))
    ]]>
    </select>
    <!-- mapped statement for IbatisUserPlatformLoginDAO.updateLogoutById -->
    <update id="updateLogoutById">
    <![CDATA[
        update cif_user_platform_login set logged=0, gmt_modified=sysdate() where (id = #{id})
    ]]>
    </update>

    <!-- mapped statement for IbatisUserPlatformLoginDAO.updateLogoutByLoginKey -->
    <update id="updateLogoutByLoginKey">
    <![CDATA[
        update cif_user_platform_login set logged=0, gmt_modified=sysdate() where (logged_login_key = #{loggedLoginKey})
    ]]>
    </update>

    <!-- mapped statement for IbatisUserPlatformLoginDAO.updateLogoutByLoggedLoginSessionId -->
    <update id="updateLogoutByLoggedLoginSessionId">
    <![CDATA[
        update cif_user_platform_login set logged=0, gmt_modified=sysdate() where (logged_login_session_id = #{loggedLoginSessionId})
    ]]>
    </update>

    <!-- mapped statement for IbatisUserPlatformLoginDAO.updateLogoutByLoggedLoginSessionIds -->
    <update id="updateLogoutByLoggedLoginSessionIds">
        update cif_user_platform_login set			logged=0,gmt_modified=sysdate() where logged_login_session_id in			<foreach open="(" close=")" separator="," collection="loggedLoginSessionIds" item="item">						#{item}			</foreach>
    </update>

    <!-- mapped statement for IbatisUserPlatformLoginDAO.selectLoggedLoginSessionIdsByUserIds -->
    <select id="selectLoggedLoginSessionIdsByUserIds" resultMap="RM-USER-PLATFORM-LOGIN">
        select			id,user_id,logged_login_name,logged_platform_type,gmt_success,logged_login_ip,logged_login_session_id,logged_login_key,			logged_sign_key,logged_crypt_key,logged_crypt_key_type,platform_login_seq,gmt_create,			gmt_modified,logged,logged_device_type,logged_device_info from			cif_user_platform_login where user_id in			<foreach open="(" close=")" separator="," collection="userIds" item="item">						#{item}			</foreach>			and logged=1 and logged_login_session_id is not null
    </select>
    <!-- mapped statement for IbatisUserPlatformLoginDAO.selectLoggedByUserId -->
    <select id="selectLoggedByUserId" resultMap="RM-USER-PLATFORM-LOGIN">
    <![CDATA[
        select id, user_id, logged_login_name, logged_platform_type, gmt_success, logged_login_ip, logged_login_session_id, logged_login_key, logged_sign_key, logged_crypt_key, logged_crypt_key_type, platform_login_seq, gmt_create, gmt_modified, logged, logged_device_type, logged_device_info from cif_user_platform_login where ((user_id = #{userId}) AND (logged = 1))
    ]]>
    </select>
 

</mapper>