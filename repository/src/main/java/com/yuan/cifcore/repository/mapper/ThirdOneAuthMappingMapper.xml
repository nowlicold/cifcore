<?xml version="1.0" encoding="GB2312" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>bench-gen-dal</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>bench</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>bench-gen-dal</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author nowli                                                          -->
<!-- ============================================================================= -->

<mapper namespace="com.yuan.cifcore.repository.mapper.ThirdOneAuthMappingMapper">
	
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table cif_third_one_auth_mapping -->
    <resultMap id="RM-THIRD-ONE-AUTH-MAPPING" type="com.yuan.cifcore.repository.entity.ThirdOneAuthMappingDO">
        <result property="id" column="id"  javaType="java.lang.String"  jdbcType="VARCHAR"/>
        <result property="thirdOneAuthId" column="third_one_auth_id"  javaType="java.lang.String"  jdbcType="VARCHAR"/>
        <result property="thirdChannel" column="third_channel"  javaType="java.lang.String"  jdbcType="VARCHAR"/>
        <result property="thirdOneAuthName" column="third_one_auth_name"  javaType="java.lang.String"  jdbcType="VARCHAR"/>
        <result property="oneAuthId" column="one_auth_id"  javaType="java.lang.String"  jdbcType="VARCHAR"/>
        <result property="domain" column="domain"  javaType="java.lang.String"  jdbcType="VARCHAR"/>
        <result property="uniqueId" column="unique_id"  javaType="java.lang.String"  jdbcType="LONGVARCHAR"/>
        <result property="properties" column="properties"  javaType="java.lang.String"  jdbcType="LONGVARCHAR"/>
        <result property="gmtCreate" column="gmt_create"  javaType="java.util.Date"  jdbcType="TIMESTAMP"/>
        <result property="gmtModified" column="gmt_modified"  javaType="java.util.Date"  jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
         id  ,
         third_one_auth_id  ,
         third_channel  ,
         third_one_auth_name  ,
         one_auth_id  ,
         domain  ,
         unique_id  ,
         properties  ,
         gmt_create  ,
         gmt_modified 
    </sql>




    <!-- ============================================= -->
    <!-- mapped statements for IbatisThirdOneAuthMappingDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisThirdOneAuthMappingDAO.selectByOneAuthId -->
    <select id="selectByOneAuthId" resultMap="RM-THIRD-ONE-AUTH-MAPPING">
    <![CDATA[
        select id, third_one_auth_id, third_channel, third_one_auth_name, properties, unique_id, gmt_create, gmt_modified, one_auth_id, domain from CIF_THIRD_ONE_AUTH_MAPPING where (one_auth_id = #{oneAuthId})
    ]]>
    </select>
    <!-- mapped statement for IbatisThirdOneAuthMappingDAO.selectByThirdChannelAndOneAuthId -->
    <select id="selectByThirdChannelAndOneAuthId" resultMap="RM-THIRD-ONE-AUTH-MAPPING">
    <![CDATA[
        select id, third_one_auth_id, third_channel, third_one_auth_name, properties, unique_id, gmt_create, gmt_modified, one_auth_id, domain from CIF_THIRD_ONE_AUTH_MAPPING where ((third_channel = #{thirdChannel}) AND (one_auth_id = #{oneAuthId}))
    ]]>
    </select>
    <!-- mapped statement for IbatisThirdOneAuthMappingDAO.selectByThirdChannelsAndOneAuthId -->
    <select id="selectByThirdChannelsAndOneAuthId" resultMap="RM-THIRD-ONE-AUTH-MAPPING">
        select id, third_one_auth_id,			third_channel, third_one_auth_name, 			properties, unique_id,			gmt_create, gmt_modified, one_auth_id, domain			from CIF_THIRD_ONE_AUTH_MAPPING			where one_auth_id=#{oneAuthId} and third_channel in			<foreach open="(" close=")" separator="," collection="thirdChannels" item="item">				#{item}			</foreach>
    </select>
    <!-- mapped statement for IbatisThirdOneAuthMappingDAO.selectThirdOneAuthIdsByThirdChannelAndOneAuthId -->
    <select id="selectThirdOneAuthIdsByThirdChannelAndOneAuthId" resultType="java.lang.String">
    <![CDATA[
        select third_one_auth_id from CIF_THIRD_ONE_AUTH_MAPPING where ((third_channel = #{thirdChannel}) AND (one_auth_id = #{oneAuthId}))
    ]]>
    </select>
    <!-- mapped statement for IbatisThirdOneAuthMappingDAO.selectByThirdChannelThirdOneAuthIdAndDomainAndOneAuthId -->
    <select id="selectByThirdChannelThirdOneAuthIdAndDomainAndOneAuthId" resultMap="RM-THIRD-ONE-AUTH-MAPPING">
    <![CDATA[
        select id, third_one_auth_id, third_channel, third_one_auth_name, properties, unique_id, gmt_create, gmt_modified, one_auth_id, domain from CIF_THIRD_ONE_AUTH_MAPPING where ((third_channel = #{thirdChannel}) AND (third_one_auth_id = #{thirdOneAuthId}) AND (domain = #{domain}) AND (one_auth_id = #{oneAuthId}))
    ]]>
    </select>
    <!-- mapped statement for IbatisThirdOneAuthMappingDAO.selectOneAuthIdByThirdChannelThirdOneAuthIdAndDomain -->
    <select id="selectOneAuthIdByThirdChannelThirdOneAuthIdAndDomain" resultType="java.lang.String">
    <![CDATA[
        select one_auth_id from CIF_THIRD_ONE_AUTH_MAPPING where ((third_channel = #{thirdChannel}) AND (third_one_auth_id = #{thirdOneAuthId}) AND (domain = #{domain}))
    ]]>
    </select>
    <!-- mapped statement for IbatisThirdOneAuthMappingDAO.selectByThirdChannelThirdOneAuthIdsAndDomain -->
    <select id="selectByThirdChannelThirdOneAuthIdsAndDomain" resultMap="RM-THIRD-ONE-AUTH-MAPPING">
        select id, third_one_auth_id,			third_channel, third_one_auth_name, 			properties, unique_id,			gmt_create, gmt_modified, one_auth_id, domain			from			CIF_THIRD_ONE_AUTH_MAPPING where domain=#{domain} and third_channel=#{thirdChannel}  and third_one_auth_id in			<foreach open="(" close=")" separator="," collection="thirdOneAuthIds" item="item">				#{item}			</foreach>
    </select>
    <!-- mapped statement for IbatisThirdOneAuthMappingDAO.selectOneAuthIdsByThirdChannelThirdOneAuthIdsAndDomain -->
    <select id="selectOneAuthIdsByThirdChannelThirdOneAuthIdsAndDomain" resultType="java.lang.String">
        select  one_auth_id from			CIF_THIRD_ONE_AUTH_MAPPING where domain=#{domain} and third_channel=#{thirdChannel} and third_one_auth_id in			<foreach open="(" close=")" separator="," collection="thirdOneAuthIds" item="item">				#{item}			</foreach>
    </select>
    <!-- mapped statement for IbatisThirdOneAuthMappingDAO.selectThirdOneAuthIdWithOneAuthIdByThirdChannelThirdOneAuthIdsAndDomain -->
    <select id="selectThirdOneAuthIdWithOneAuthIdByThirdChannelThirdOneAuthIdsAndDomain" resultType="java.util.HashMap">
        select  third_one_auth_id, one_auth_id from			CIF_THIRD_ONE_AUTH_MAPPING where domain=#{domain} and third_channel=#{thirdChannel} and third_one_auth_id  in			<foreach open="(" close=")" separator="," collection="thirdOneAuthIds" item="item">				#{item}			</foreach>
    </select>
    <!-- mapped statement for IbatisThirdOneAuthMappingDAO.selectCountByThirdChannelThirdOneAuthIdAndDomainAndOneAuthId -->
    <select id="selectCountByThirdChannelThirdOneAuthIdAndDomainAndOneAuthId" resultType="long">
    <![CDATA[
        select COUNT(*) from CIF_THIRD_ONE_AUTH_MAPPING where ((third_channel = #{thirdChannel}) AND (third_one_auth_id = #{thirdOneAuthId}) AND (domain = #{domain}) AND (one_auth_id = #{oneAuthId}))
    ]]>
    </select>
    <!-- mapped statement for IbatisThirdOneAuthMappingDAO.selectCountByOneAuthId -->
    <select id="selectCountByOneAuthId" resultType="long">
    <![CDATA[
        select COUNT(*) from CIF_THIRD_ONE_AUTH_MAPPING where (one_auth_id = #{oneAuthId})
    ]]>
    </select>
    <!-- mapped statement for IbatisThirdOneAuthMappingDAO.selectByOneAuthIds -->
    <select id="selectByOneAuthIds" resultMap="RM-THIRD-ONE-AUTH-MAPPING">
        select id, third_one_auth_id,			third_channel, third_one_auth_name, 			properties, unique_id,			gmt_create, gmt_modified, one_auth_id, domain			from			CIF_THIRD_ONE_AUTH_MAPPING where one_auth_id in			<foreach open="(" close=")" separator="," collection="oneAuthIds" item="item">				#{item}			</foreach>
    </select>
    <!-- mapped statement for IbatisThirdOneAuthMappingDAO.selectByThirdChannelAndOneAuthIds -->
    <select id="selectByThirdChannelAndOneAuthIds" resultMap="RM-THIRD-ONE-AUTH-MAPPING">
        select id, third_one_auth_id,			third_channel, third_one_auth_name, 			properties, unique_id,			gmt_create, gmt_modified, one_auth_id, domain			from			CIF_THIRD_ONE_AUTH_MAPPING where third_channel=#{thirdChannel} and one_auth_id in			<foreach open="(" close=")" separator="," collection="oneAuthIds" item="item">				#{item}			</foreach>
    </select>
    <!-- mapped statement for IbatisThirdOneAuthMappingDAO.selectByThirdChannelThirdOneAuthIdAndDomainAndOneAuthIdForUpdate -->
    <select id="selectByThirdChannelThirdOneAuthIdAndDomainAndOneAuthIdForUpdate" resultMap="RM-THIRD-ONE-AUTH-MAPPING">
    <![CDATA[
        select id, third_one_auth_id, third_channel, third_one_auth_name, properties, unique_id, gmt_create, gmt_modified, one_auth_id, domain from CIF_THIRD_ONE_AUTH_MAPPING where ((third_channel = #{thirdChannel}) AND (third_one_auth_id = #{thirdOneAuthId}) AND (domain = #{domain}) AND (one_auth_id = #{oneAuthId})) for update 
    ]]>
    </select>
    <!-- mapped statement for IbatisThirdOneAuthMappingDAO.deleteById -->
    <delete id="deleteById">
    <![CDATA[
        delete from CIF_THIRD_ONE_AUTH_MAPPING where (id = #{id})
    ]]>
    </delete>

    <!-- mapped statement for IbatisThirdOneAuthMappingDAO.selectById -->
    <select id="selectById" resultMap="RM-THIRD-ONE-AUTH-MAPPING">
    <![CDATA[
        select id, third_one_auth_id, third_channel, third_one_auth_name, properties, unique_id, gmt_create, gmt_modified, one_auth_id, domain from CIF_THIRD_ONE_AUTH_MAPPING where (id = #{id})
    ]]>
    </select>
 

</mapper>