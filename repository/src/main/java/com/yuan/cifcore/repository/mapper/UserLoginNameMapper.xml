<?xml version="1.0" encoding="GB2312" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>bench-gen-dal</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>bench</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>bench-gen-dal</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author nowli                                                          -->
<!-- ============================================================================= -->

<mapper namespace="com.yuan.cifcore.repository.mapper.UserLoginNameMapper">
	
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table cif_user_login_name -->
    <resultMap id="RM-USER-LOGIN-NAME" type="com.yuan.cifcore.repository.entity.UserLoginNameDO">
        <result property="id" column="id"  javaType="long"  jdbcType="DECIMAL"/>
        <result property="userId" column="user_id"  javaType="java.lang.String"  jdbcType="VARCHAR"/>
        <result property="loginName" column="login_name"  javaType="java.lang.String"  jdbcType="LONGVARCHAR"/>
        <result property="loginNameType" column="login_name_type"  javaType="java.lang.String"  jdbcType="VARCHAR"/>
        <result property="gmtCreate" column="gmt_create"  javaType="java.util.Date"  jdbcType="TIMESTAMP"/>
        <result property="gmtModified" column="gmt_modified"  javaType="java.util.Date"  jdbcType="TIMESTAMP"/>
        <result property="gmtLastLogin" column="gmt_last_login"  javaType="java.util.Date"  jdbcType="TIMESTAMP"/>
        <result property="changeStage" column="change_stage"  javaType="java.lang.String"  jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
         id  ,
         user_id  ,
         login_name  ,
         login_name_type  ,
         gmt_create  ,
         gmt_modified  ,
         gmt_last_login  ,
         change_stage 
    </sql>




    <!-- ============================================= -->
    <!-- mapped statements for IbatisUserLoginNameDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisUserLoginNameDAO.selectByLoginName -->
    <select id="selectByLoginName" resultMap="RM-USER-LOGIN-NAME">
    <![CDATA[
        select id, user_id, login_name, login_name_type, gmt_create, gmt_modified, gmt_last_login, change_stage from cif_user_login_name where (login_name = #{loginName})
    ]]>
    </select>
    <!-- mapped statement for IbatisUserLoginNameDAO.selectUserIdbyLoginName -->
    <select id="selectUserIdbyLoginName" resultType="java.lang.String">
    <![CDATA[
        select user_id from cif_user_login_name where (login_name = #{loginName})
    ]]>
    </select>
    <!-- mapped statement for IbatisUserLoginNameDAO.selectCountByLoginName -->
    <select id="selectCountByLoginName" resultType="long">
    <![CDATA[
        select COUNT(*) from cif_user_login_name where (login_name = #{loginName})
    ]]>
    </select>
    <!-- mapped statement for IbatisUserLoginNameDAO.deleteByUserIdAndLoginName -->
    <delete id="deleteByUserIdAndLoginName">
    <![CDATA[
        delete from cif_user_login_name where ((user_id = #{userId}) AND (login_name = #{loginName}))
    ]]>
    </delete>

    <!-- mapped statement for IbatisUserLoginNameDAO.selectByUserId -->
    <select id="selectByUserId" resultMap="RM-USER-LOGIN-NAME">
    <![CDATA[
        select id, user_id, login_name, login_name_type, gmt_create, gmt_modified, gmt_last_login, change_stage from cif_user_login_name where (user_id = #{userId})
    ]]>
    </select>
    <!-- mapped statement for IbatisUserLoginNameDAO.selectLoginNamesByLoginNames -->
    <select id="selectLoginNamesByLoginNames" resultType="java.lang.String">
        select login_name from			cif_user_login_name where login_name in 			<foreach open="(" close=")" separator="," collection="loginNames" item="item"> 				#{item} 			</foreach>
    </select>
    <!-- mapped statement for IbatisUserLoginNameDAO.updateNewLoginNameByUserIdAndOldLoginName -->
    <update id="updateNewLoginNameByUserIdAndOldLoginName">
        update cif_user_login_name			set login_name=#{newLoginName},			gmt_modified=sysdate()			where user_id=#{userId} and			login_name=#{oldLoginName}
    </update>

    <!-- mapped statement for IbatisUserLoginNameDAO.updateLoginNameByUserIdAndLoginNameType -->
    <update id="updateLoginNameByUserIdAndLoginNameType">
    <![CDATA[
        update cif_user_login_name set login_name=#{loginName}, gmt_modified=sysdate() where ((user_id = #{userId}) AND (login_name_type = #{loginNameType}))
    ]]>
    </update>

 

</mapper>