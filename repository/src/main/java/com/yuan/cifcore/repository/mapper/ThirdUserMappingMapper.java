/*
 * Bench Inc.
 * Copyright (c) 2004 All Rights Reserved.
 */
package com.yuan.cifcore.repository.mapper;



// auto generated imports
//dao imports
import java.util.Map;
import java.util.HashMap;
import java.util.List;
import java.util.ArrayList;
import com.yuan.cifcore.repository.entity.ThirdUserMappingDO;
import org.springframework.dao.DataAccessException;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import org.apache.ibatis.annotations.Param;
import com.baomidou.mybatisplus.core.mapper.BaseMapper;
//do imports
import java.util.Date;

/**
 * A dao interface provides methods to access database table <tt>cif_third_user_mapping</tt>.
 *
 * This file is generated by <tt>bench-gen-dal</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>bench</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/cif_third_user_mapping.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>bench-gen-dal</tt> 
 * to generate this file.
 *
 * @author cold
 */
public interface ThirdUserMappingMapper  extends BaseMapper<ThirdUserMappingDO>{
	/**
	 *  Query DB table <tt>cif_third_user_mapping</tt> for records.
	 *
	 *  <p>
	 *   
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, third_user_id, third_channel, third_login_name, third_user_name, properties, gmt_create, gmt_modified, domain, user_id, third_parent_user_id, unique_id from cif_third_user_mapping where (user_id = ?)</tt>
	 *
	 *	@param userId 
	 *	@return List<ThirdUserMappingDO>
	 *	@throws DataAccessException
	 */	 

		public List<ThirdUserMappingDO> selectByUserId(@Param("userId")String userId) throws DataAccessException;

	/**
	 *  Query DB table <tt>cif_third_user_mapping</tt> for records.
	 *
	 *  <p>
	 *   
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, third_user_id, third_channel, third_login_name, third_user_name, properties, gmt_create, gmt_modified, domain, user_id, third_parent_user_id, unique_id from cif_third_user_mapping where (id = ?) for update</tt>
	 *
	 *	@param id 
	 *	@return ThirdUserMappingDO
	 *	@throws DataAccessException
	 */	 

		public ThirdUserMappingDO selectByIdForUpdate(@Param("id")long id) throws DataAccessException;

	/**
	 *  Query DB table <tt>cif_third_user_mapping</tt> for records.
	 *
	 *  <p>
	 *   
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, third_user_id, third_channel, third_login_name, third_user_name, properties, gmt_create, gmt_modified, domain, user_id, third_parent_user_id, unique_id from cif_third_user_mapping where ((third_channel = ?) AND (user_id = ?))</tt>
	 *
	 *	@param thirdChannel 
	 *	@param userId 
	 *	@return List<ThirdUserMappingDO>
	 *	@throws DataAccessException
	 */	 

		public List<ThirdUserMappingDO> selectByThirdChannelAndUserId(@Param("thirdChannel")String thirdChannel , @Param("userId")String userId) throws DataAccessException;

	/**
	 *  Query DB table <tt>cif_third_user_mapping</tt> for records.
	 *
	 *  <p>
	 *   
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, third_user_id, third_channel, third_login_name, third_user_name, properties, user_id, gmt_create, gmt_modified, domain, third_parent_user_id, unique_id from cif_third_user_mapping where (1 = 0)</tt>
	 *
	 *	@param thirdChannels 
	 *	@param userId 
	 *	@return List<ThirdUserMappingDO>
	 *	@throws DataAccessException
	 */	 

		public List<ThirdUserMappingDO> selectByThirdChannelsAndUserId(@Param("thirdChannels")List<?> thirdChannels , @Param("userId")String userId) throws DataAccessException;

	/**
	 *  Query DB table <tt>cif_third_user_mapping</tt> for records.
	 *
	 *  <p>
	 *   
	 *  The sql statement for this operation is <br>
	 *  <tt>select third_channel, third_user_id from cif_third_user_mapping where (1 = 0)</tt>
	 *
	 *	@param thirdChannels 
	 *	@param userId 
	 *	@return List<Map<String,Object>>
	 *	@throws DataAccessException
	 */	 

		public List<Map<String,Object>> selectThirdUserIdsByThirdChannelsAndUserId(@Param("thirdChannels")List<?> thirdChannels , @Param("userId")String userId) throws DataAccessException;

	/**
	 *  Query DB table <tt>cif_third_user_mapping</tt> for records.
	 *
	 *  <p>
	 *   
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, third_user_id, third_channel, third_login_name, third_user_name, properties, gmt_create, gmt_modified, domain, user_id, third_parent_user_id, unique_id from cif_third_user_mapping where ((third_channel = ?) AND (third_parent_user_id = ?) AND (domain = ?))</tt>
	 *
	 *	@param thirdChannel 
	 *	@param thirdParentUserId 
	 *	@param domain 
	 *	@return List<ThirdUserMappingDO>
	 *	@throws DataAccessException
	 */	 

		public List<ThirdUserMappingDO> selectByThirdChannelThirdParentUserIdAndDomain(@Param("thirdChannel")String thirdChannel , @Param("thirdParentUserId")String thirdParentUserId , @Param("domain")String domain) throws DataAccessException;

	/**
	 *  Query DB table <tt>cif_third_user_mapping</tt> for records.
	 *
	 *  <p>
	 *   
	 *  The sql statement for this operation is <br>
	 *  <tt>select third_user_id from cif_third_user_mapping where ((third_channel = ?) AND (user_id = ?))</tt>
	 *
	 *	@param thirdChannel 
	 *	@param userId 
	 *	@return List<String>
	 *	@throws DataAccessException
	 */	 

		public List<String> selectThirdUserIdByThirdChannelAndUserId(@Param("thirdChannel")String thirdChannel , @Param("userId")String userId) throws DataAccessException;

	/**
	 *  Query DB table <tt>cif_third_user_mapping</tt> for records.
	 *
	 *  <p>
	 *   
	 *  The sql statement for this operation is <br>
	 *  <tt>select third_parent_user_id from cif_third_user_mapping where ((third_channel = ?) AND (user_id = ?))</tt>
	 *
	 *	@param thirdChannel 
	 *	@param userId 
	 *	@return List<String>
	 *	@throws DataAccessException
	 */	 

		public List<String> selectThirdParentUserIdByThirdChannelAndUserId(@Param("thirdChannel")String thirdChannel , @Param("userId")String userId) throws DataAccessException;

	/**
	 *  Query DB table <tt>cif_third_user_mapping</tt> for records.
	 *
	 *  <p>
	 *   
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, third_user_id, third_channel, third_login_name, third_user_name, properties, gmt_create, gmt_modified, domain, user_id, third_parent_user_id, unique_id from cif_third_user_mapping where ((third_channel = ?) AND (third_user_id = ?) AND (domain = ?) AND (user_id = ?))</tt>
	 *
	 *	@param thirdChannel 
	 *	@param thirdUserId 
	 *	@param domain 
	 *	@param userId 
	 *	@return ThirdUserMappingDO
	 *	@throws DataAccessException
	 */	 

		public ThirdUserMappingDO selectByThirdChannelThirdUserIdAndDomainAndUserId(@Param("thirdChannel")String thirdChannel , @Param("thirdUserId")String thirdUserId , @Param("domain")String domain , @Param("userId")String userId) throws DataAccessException;

	/**
	 *  Query DB table <tt>cif_third_user_mapping</tt> for records.
	 *
	 *  <p>
	 *   
	 *  The sql statement for this operation is <br>
	 *  <tt>select user_id from cif_third_user_mapping where ((third_channel = ?) AND (third_user_id = ?) AND (domain = ?))</tt>
	 *
	 *	@param thirdChannel 
	 *	@param thirdUserId 
	 *	@param domain 
	 *	@return List<String>
	 *	@throws DataAccessException
	 */	 

		public List<String> selectUserIdByThirdChannelThirdUserIdAndDomain(@Param("thirdChannel")String thirdChannel , @Param("thirdUserId")String thirdUserId , @Param("domain")String domain) throws DataAccessException;

	/**
	 *  Query DB table <tt>cif_third_user_mapping</tt> for records.
	 *
	 *  <p>
	 *   
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, third_user_id, third_channel, third_login_name, third_user_name, properties, gmt_create, gmt_modified, domain, user_id, third_parent_user_id, unique_id from cif_third_user_mapping where ((third_channel = ?) AND (third_user_id = ?) AND (domain = ?))</tt>
	 *
	 *	@param thirdChannel 
	 *	@param thirdUserId 
	 *	@param domain 
	 *	@return List<ThirdUserMappingDO>
	 *	@throws DataAccessException
	 */	 

		public List<ThirdUserMappingDO> selectByThirdChannelThirdUserIdAndDomain(@Param("thirdChannel")String thirdChannel , @Param("thirdUserId")String thirdUserId , @Param("domain")String domain) throws DataAccessException;

	/**
	 *  Query DB table <tt>cif_third_user_mapping</tt> for records.
	 *
	 *  <p>
	 *   
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, third_user_id, third_channel, third_login_name, third_user_name, properties, gmt_create, gmt_modified, domain, user_id, third_parent_user_id, unique_id from cif_third_user_mapping where (1 = 0)</tt>
	 *
	 *	@param thirdChannel 
	 *	@param thirdUserIds 
	 *	@param domain 
	 *	@return List<ThirdUserMappingDO>
	 *	@throws DataAccessException
	 */	 

		public List<ThirdUserMappingDO> selectByThirdChannelThirdUserIdsAndDomain(@Param("thirdChannel")String thirdChannel , @Param("thirdUserIds")List<?> thirdUserIds , @Param("domain")String domain) throws DataAccessException;

	/**
	 *  Query DB table <tt>cif_third_user_mapping</tt> for records.
	 *
	 *  <p>
	 *   
	 *  The sql statement for this operation is <br>
	 *  <tt>select user_id from cif_third_user_mapping where (1 = 0)</tt>
	 *
	 *	@param thirdChannel 
	 *	@param thirdUserIds 
	 *	@param domain 
	 *	@return List<String>
	 *	@throws DataAccessException
	 */	 

		public List<String> selectUserIdsByThirdChannelThirdUserIdsAndDomain(@Param("thirdChannel")String thirdChannel , @Param("thirdUserIds")List<?> thirdUserIds , @Param("domain")String domain) throws DataAccessException;

	/**
	 *  Query DB table <tt>cif_third_user_mapping</tt> for records.
	 *
	 *  <p>
	 *   
	 *  The sql statement for this operation is <br>
	 *  <tt>select third_user_id, user_id from cif_third_user_mapping where (1 = 0)</tt>
	 *
	 *	@param thirdChannel 
	 *	@param thirdUserIds 
	 *	@param domain 
	 *	@return List<Map<String,Object>>
	 *	@throws DataAccessException
	 */	 

		public List<Map<String,Object>> selectThirdUserIdWithUserIdByThirdChannelThirdUserIdsAndDomain(@Param("thirdChannel")String thirdChannel , @Param("thirdUserIds")List<?> thirdUserIds , @Param("domain")String domain) throws DataAccessException;

	/**
	 *  Query DB table <tt>cif_third_user_mapping</tt> for records.
	 *
	 *  <p>
	 *   
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from cif_third_user_mapping where ((third_channel = ?) AND (third_user_id = ?) AND (domain = ?) AND (user_id = ?))</tt>
	 *
	 *	@param thirdChannel 
	 *	@param thirdUserId 
	 *	@param domain 
	 *	@param userId 
	 *	@return long
	 *	@throws DataAccessException
	 */	 

		public long selectCountByThirdChannelThirdUserIdAndDomainAndUserId(@Param("thirdChannel")String thirdChannel , @Param("thirdUserId")String thirdUserId , @Param("domain")String domain , @Param("userId")String userId) throws DataAccessException;

	/**
	 *  Query DB table <tt>cif_third_user_mapping</tt> for records.
	 *
	 *  <p>
	 *   
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from cif_third_user_mapping where (user_id = ?)</tt>
	 *
	 *	@param userId 
	 *	@return long
	 *	@throws DataAccessException
	 */	 

		public long selectCountByUserId(@Param("userId")String userId) throws DataAccessException;

	/**
	 *  Query DB table <tt>cif_third_user_mapping</tt> for records.
	 *
	 *  <p>
	 *   
	 *  The sql statement for this operation is <br>
	 *  <tt>select third_user_id, user_id from cif_third_user_mapping where (1 = 0)</tt>
	 *
	 *	@param thirdChannel 
	 *	@param userIds 
	 *	@return List<Map<String,Object>>
	 *	@throws DataAccessException
	 */	 

		public List<Map<String,Object>> selectUserIdThirdUserIdByThirdChannelAndUserIds(@Param("thirdChannel")String thirdChannel , @Param("userIds")List<?> userIds) throws DataAccessException;

	/**
	 *  Query DB table <tt>cif_third_user_mapping</tt> for records.
	 *
	 *  <p>
	 *   
	 *  The sql statement for this operation is <br>
	 *  <tt>select user_id from cif_third_user_mapping where (1 = 0)</tt>
	 *
	 *	@param thirdChannel 
	 *	@param thirdUserIds 
	 *	@return List<String>
	 *	@throws DataAccessException
	 */	 

		public List<String> selectUserIdsByThirdChannelThirdUserIds(@Param("thirdChannel")String thirdChannel , @Param("thirdUserIds")List<?> thirdUserIds) throws DataAccessException;

	/**
	 *  Query DB table <tt>cif_third_user_mapping</tt> for records.
	 *
	 *  <p>
	 *   
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, third_user_id, third_channel, third_login_name, third_user_name, properties, gmt_create, gmt_modified, domain, user_id, third_parent_user_id, unique_id from cif_third_user_mapping where (1 = 0)</tt>
	 *
	 *	@param id 
	 *	@param userId 
	 *	@param thirdUserId 
	 *	@param thirdChannel 
	 *	@param thirdUserName 
	 *	@param thirdLoginName 
	 *	@param thirdParentUserId 
	 *	@param page 
	 *	@return List<ThirdUserMappingDO>
	 *	@throws DataAccessException
	 */	 

		public List<ThirdUserMappingDO> select(@Param("id")long id , @Param("userId")String userId , @Param("thirdUserId")String thirdUserId , @Param("thirdChannel")String thirdChannel , @Param("thirdUserName")String thirdUserName , @Param("thirdLoginName")String thirdLoginName , @Param("thirdParentUserId")String thirdParentUserId , @Param("page")Page<ThirdUserMappingDO> page) throws DataAccessException;

	/**
	 *  Query DB table <tt>cif_third_user_mapping</tt> for records.
	 *
	 *  <p>
	 *   
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, third_user_id, third_channel, third_login_name, third_user_name, properties, gmt_create, gmt_modified, domain, user_id, third_parent_user_id, unique_id from cif_third_user_mapping where (1 = 0)</tt>
	 *
	 *	@param userIds 
	 *	@return List<ThirdUserMappingDO>
	 *	@throws DataAccessException
	 */	 

		public List<ThirdUserMappingDO> selectByUserIds(@Param("userIds")List<?> userIds) throws DataAccessException;

	/**
	 *  Query DB table <tt>cif_third_user_mapping</tt> for records.
	 *
	 *  <p>
	 *   
	 *  The sql statement for this operation is <br>
	 *  <tt>select user_id from cif_third_user_mapping where ((third_channel = ?) AND (third_parent_user_id = ?) AND (domain = ?))</tt>
	 *
	 *	@param thirdChannel 
	 *	@param thirdParentUserId 
	 *	@param domain 
	 *	@return List<String>
	 *	@throws DataAccessException
	 */	 

		public List<String> selectUserIdsByThirdChannelThirdParentUserIdAndDomain(@Param("thirdChannel")String thirdChannel , @Param("thirdParentUserId")String thirdParentUserId , @Param("domain")String domain) throws DataAccessException;

	/**
	 *  Update DB table <tt>cif_third_user_mapping</tt>.
	 *
	 *  <p>
	 *   
	 *  The sql statement for this operation is <br>
	 *  <tt>update cif_third_user_mapping set third_login_name=?, gmt_modified=@db@.sysdate where ((third_channel = ?) AND (third_user_id = ?))</tt>
	 *
	 *	@param thirdLoginName 
	 *	@param thirdChannel 
	 *	@param thirdUserId 
	 *	@return int
	 *	@throws DataAccessException
	 */	 

		public int updateThirdLoginNameByThirdChannelAndThirdUserId(@Param("thirdLoginName")String thirdLoginName , @Param("thirdChannel")String thirdChannel , @Param("thirdUserId")String thirdUserId) throws DataAccessException;

	/**
	 *  Update DB table <tt>cif_third_user_mapping</tt>.
	 *
	 *  <p>
	 *   
	 *  The sql statement for this operation is <br>
	 *  <tt>update cif_third_user_mapping set third_parent_user_id=?, gmt_modified=@db@.sysdate where (id = ?)</tt>
	 *
	 *	@param thirdParentUserId 
	 *	@param id 
	 *	@return int
	 *	@throws DataAccessException
	 */	 

		public int updateThirdParentUserIdById(@Param("thirdParentUserId")String thirdParentUserId , @Param("id")long id) throws DataAccessException;

	/**
	 *  Query DB table <tt>cif_third_user_mapping</tt> for records.
	 *
	 *  <p>
	 *   
	 *  The sql statement for this operation is <br>
	 *  <tt>select third_parent_user_id from cif_third_user_mapping where (1 = 0)</tt>
	 *
	 *	@param thirdChannel 
	 *	@param userIds 
	 *	@return List<String>
	 *	@throws DataAccessException
	 */	 

		public List<String> selectDistinctThirdParentUserIdsByThirdChannelAndUserIds(@Param("thirdChannel")String thirdChannel , @Param("userIds")List<?> userIds) throws DataAccessException;

	/**
	 *  Query DB table <tt>cif_third_user_mapping</tt> for records.
	 *
	 *  <p>
	 *   
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, third_user_id, third_channel, third_login_name, third_user_name, properties, gmt_create, gmt_modified, domain, user_id, third_parent_user_id, unique_id from cif_third_user_mapping where (1 = 0)</tt>
	 *
	 *	@param thirdChannel 
	 *	@param userIds 
	 *	@return List<ThirdUserMappingDO>
	 *	@throws DataAccessException
	 */	 

		public List<ThirdUserMappingDO> selectByThirdChannelAndUserIds(@Param("thirdChannel")String thirdChannel , @Param("userIds")List<?> userIds) throws DataAccessException;

	/**
	 *  Query DB table <tt>cif_third_user_mapping</tt> for records.
	 *
	 *  <p>
	 *   
	 *  The sql statement for this operation is <br>
	 *  <tt>select third_parent_user_id from cif_third_user_mapping where (1 = 0)</tt>
	 *
	 *	@param thirdChannel 
	 *	@param userIds 
	 *	@param domain 
	 *	@return List<String>
	 *	@throws DataAccessException
	 */	 

		public List<String> selectDistinctThirdParentUserIdsByThirdChannelUserIdsAndDomain(@Param("thirdChannel")String thirdChannel , @Param("userIds")List<?> userIds , @Param("domain")String domain) throws DataAccessException;

	/**
	 *  Query DB table <tt>cif_third_user_mapping</tt> for records.
	 *
	 *  <p>
	 *   
	 *  The sql statement for this operation is <br>
	 *  <tt>select user_id from cif_third_user_mapping where (1 = 0)</tt>
	 *
	 *	@param userId 
	 *	@param domain 
	 *	@return List<String>
	 *	@throws DataAccessException
	 */	 

		public List<String> selectUserIdsWithSameThirdParentUserIdByUserIdAndDomain(@Param("userId")String userId , @Param("domain")String domain) throws DataAccessException;

	/**
	 *  Query DB table <tt>cif_third_user_mapping</tt> for records.
	 *
	 *  <p>
	 *   
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, third_user_id, third_channel, third_login_name, third_user_name, properties, user_id, gmt_create, gmt_modified, domain, third_parent_user_id, unique_id from cif_third_user_mapping where ((third_channel = ?) AND (third_user_id = ?) AND (domain = ?) AND (user_id = ?)) for update</tt>
	 *
	 *	@param thirdChannel 
	 *	@param thirdUserId 
	 *	@param domain 
	 *	@param userId 
	 *	@return ThirdUserMappingDO
	 *	@throws DataAccessException
	 */	 

		public ThirdUserMappingDO selectByThirdChannelThirdUserIdAndDomainAndUserIdForUpdate(@Param("thirdChannel")String thirdChannel , @Param("thirdUserId")String thirdUserId , @Param("domain")String domain , @Param("userId")String userId) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>cif_third_user_mapping</tt>.
	 *
	 *  <p>
	 *   
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from cif_third_user_mapping where (id = ?)</tt>
	 *
	 *	@param id 
	 *	@return int
	 *	@throws DataAccessException
	 */	 

		public int deleteById(@Param("id")long id) throws DataAccessException;

	/**
	 *  Query DB table <tt>cif_third_user_mapping</tt> for records.
	 *
	 *  <p>
	 *   
	 *  The sql statement for this operation is <br>
	 *  <tt>select id, third_user_id, third_channel, third_login_name, third_user_name, properties, user_id, gmt_create, gmt_modified, domain, third_parent_user_id, unique_id from cif_third_user_mapping where (id = ?)</tt>
	 *
	 *	@param id 
	 *	@return ThirdUserMappingDO
	 *	@throws DataAccessException
	 */	 

		public ThirdUserMappingDO selectById(@Param("id")long id) throws DataAccessException;

}